/* Breakpoints */
@mixin xsm-screen-down {
	@media screen and (max-width: 576px) {
		@content;
	}
}

@mixin sm-screen-down {
	@media screen and (max-width: 768px) {
		@content;
	}
}

@mixin md-screen-down {
	@media screen and (max-width: 1024px) {
		@content;
	}
}

@mixin xl-screen-down {
	@media screen and (max-width: 1440px) {
		@content;
	}
}

@mixin xxl-screen-down {
	@media screen and (max-width: 1920px) {
		@content;
	}
}

@mixin xsm-screen-up {
	@media screen and (max-width: 577px) {
		@content;
	}
}

@mixin sm-screen-up {
	@media screen and (min-width: 769px) {
		@content;
	}
}

@mixin md-screen-up {
	@media screen and (min-width: 1025px) {
		@content;
	}
}

@mixin xl-screen-up {
	@media screen and (min-width: 1441px) {
		@content;
	}
}

@mixin xxl-screen-up {
	@media screen and (min-width: 1921px) {
		@content;
	}
}

/* FLex */
@mixin flex {
	display: -webkit-box;
	display: -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin flex-just($value: center) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-moz-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-moz-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
		-ms-flex-pack: justify;
	} @else if $value == space-around {
		-ms-flex-pack: distribute;
	} @else {
		-webkit-box-pack: $value;
		-moz-box-pack: $value;
		-ms-flex-pack: $value;
	}
	-webkit-justify-content: $value;
	justify-content: $value;
}

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
		-moz-box-direction: reverse;
		-moz-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
		-moz-box-direction: normal;
		-moz-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
		-moz-box-direction: reverse;
		-moz-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
		-moz-box-direction: normal;
		-moz-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

@mixin inline-flex {
	display: -webkit-inline-box;
	display: -moz-inline-box;
	display: -webkit-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
	vertical-align: middle;
	align-items: center;
}

@mixin align-items($value: stretch) {
  	@if $value == flex-start {
	    -webkit-box-align: start;
	    -moz-box-align: start;
	    -ms-flex-align: start;
  	} @else if $value == flex-end {
	    -webkit-box-align: end;
	    -moz-box-align: end;
	    -ms-flex-align: end;
  	} @else {
	    -webkit-box-align: $value;
	    -moz-box-align: $value;
	    -ms-flex-align: $value;
  	}
	-webkit-align-items: $value;
	align-items: $value;
}


/* Animation */

@mixin transition($property: all, $ease: $transition-function, $duration: $transition_duration) {
	-webkit-transition: $property $ease $duration;
	-moz-transition: $property $ease $duration;
	-o-transition: $property $ease $duration;
	transition: $property $ease $duration;
}

/* Shadow */
@mixin box-shadow($inset: false, $top: 0, $left: 0, $blur: 0, $spread: 0.3125rem, $color: #757575) {
	@if $inset {
		-webkit-box-shadow:inset $top $left $blur $spread $color;
		-moz-box-shadow:inset $top $left $blur $spread $color;
		box-shadow:inset $top $left $blur $spread $color;
	} @else {
		-webkit-box-shadow: $top $left $blur $spread $color;
		-moz-box-shadow: $top $left $blur $spread $color;
		box-shadow: $top $left $blur $spread $color;
	}
}

/*Typography*/

@mixin fluid-typo($min-unit: 1rem , $fluid-size: 6vw, $max-unit: 2rem) {
	font-size: clamp($min-unit, $fluid-size, $max-unit);
}